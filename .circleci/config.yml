base_job: &base_job
  #resource_class: xlarge
  docker:
    - image: circleci/android@sha256:424801c766d119676dfdfddf469b1268dcab9b477d449731d35af9a2f39915d1
  working_directory: '~/project'
  environment:
    TERM: dumb
    ADB_INSTALL_TIMEOUT: 8
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'

version: 2
jobs:
  build:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - run: make bootstrap-circle
      - run: ./gradlew dependencies
      - save_cache:
          key: v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
          paths:
            - ~/.gradle
            - ~/.android
      - run: ./gradlew assembleExternalRelease
      - run: ./gradlew assembleRegressionDebugAndroidTest
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./

  test:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - attach_workspace:
          at: ~/project
      - run: ./gradlew checkstyle
      - run: ./gradlew lintExternalRelease
      - run: ./gradlew testExternalRelease -PdisablePreDex
      - run: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Prepare gcloud for Firebase Test Lab
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      # - run:
      #     name: Run Android Tests with Firebase Test Lab
      #     command: >
      #       cd ~/project && sudo gcloud firebase test android run \
      #         --app ./app/build/outputs/apk/debug/project-debug.apk \
      #         --test ./build/outputs/apk/androidTest/debug/project-debug-androidTest.apk \
      #         --results-bucket cloud-test-${GOOGLE_PROJECT_ID} \
      #         --directories-to-pull /sdcard/screenshots/com.kickstarter.kickstarter.regression.debug \
      #         --device-ids Pixel2 \
      #         --os-version-ids 27
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_artifacts:
          path: app/build/outputs
          destination: tests

  create_internal:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - attach_workspace:
          at: ~/project
      - run:
          name: push to internal branch
          command: make internal

  internal:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - restore_cache:
          keys:
            - v1-bundler-{{ checksum "Gemfile.lock" }}
            - v1-bundler-
      - run:
          name: Bundle install
          command: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: v1-bundler-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
      - attach_workspace:
          at: ~/project
      - run:
          name: Install Firebase CLI
          command: curl -sL https://firebase.tools | bash
      - run:
          name: Deploy Internal to Crashlytics and S3
          command: bundle exec fastlane internal

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - create_internal:
          requires:
            - build
            - test
          filters:
            branches:
              only: master
      - internal:
          requires:
            - build
            - test
          filters:
            branches:
              only: internal

experimental:
  notify:
    branches:
      only:
        - master
        - internal
