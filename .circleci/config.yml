executors:
  android:
    working_directory: '~/project'
    resource_class: xlarge
    docker:
      - image: circleci/android:api-30

base_job: &base_job
  executor: android
  working_directory: '~/project'
  environment:
    TERM: dumb
    ADB_INSTALL_TIMEOUT: 8
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'

version: 2.1
orbs:
  codecov: codecov/codecov@1.1.5
  android: circleci/android@1.0.3

jobs:
  build:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - run: make bootstrap-circle
      - run: ./gradlew dependencies
      - save_cache:
          key: v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
          paths:
            - ~/.gradle
            - ~/.android
      - run: ./gradlew assembleExternalRelease
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./

  test:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - attach_workspace:
          at: ~/project
      - run: ./gradlew checkstyle
      - run: ./gradlew ktlint
      - run: ./gradlew lintExternalRelease
      - run: ./gradlew testExternalRelease -PdisablePreDex
      - run: ./gradlew jacocoInternalRelease
      - codecov/upload:
          file:  app/build/reports/jacoco/jacocoInternalReleaseReport/jacocoInternalReleaseReport.xml
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_artifacts:
          path: app/build/outputs
          destination: tests

  snapshot-test:
    <<: *base_job
    steps:
      - checkout
      - run: ./script/emulator/start_emulator.sh
      - android/wait-for-emulator
      - android/run-tests:
          test-command: ./gradlew executeScreenshotTests
      - android/save-gradle-cache:
          cache-prefix: v1a

  create_internal:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - attach_workspace:
          at: ~/project
      - run:
          name: push to internal branch
          command: make internal

  create_release:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - attach_workspace:
          at: ~/project
      - run:
          name: push to release branch
          command: make release

  internal:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - restore_cache:
          keys:
            - v1-bundler-{{ checksum "Gemfile.lock" }}
            - v1-bundler-
      - run:
          name: Bundle install
          command: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: v1-bundler-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
      - attach_workspace:
          at: ~/project
      - run:
          name: Install Firebase CLI
          command: curl -sL https://firebase.tools | bash
      - run:
          name: Deploy Internal to Crashlytics and S3
          command: bundle exec fastlane internal

  release:
   <<: *base_job
   steps:
     - checkout
     - restore_cache:
         keys:
           - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
           - v5-android-
     - restore_cache:
         keys:
           - v1-bundler-{{ checksum "Gemfile.lock" }}
           - v1-bundler-
     - run:
         name: Bundle install
         command: bundle check || bundle install --path vendor/bundle
     - save_cache:
         key: v1-bundler-{{ checksum "Gemfile.lock" }}
         paths:
           - ./vendor/bundle
     - attach_workspace:
         at: ~/project
     - run:
         name: Install Firebase CLI
         command: curl -sL https://firebase.tools | bash
     - run:
         name: Deploy Internal to Crashlytics and S3
         command: bundle exec fastlane external

workflows:
  version: 2.1
  build_and_test:
    jobs:
      - snapshot-test
      - build
      - test:
          requires:
            - build
      - create_internal:
          requires:
            - build
            - test
          filters:
            branches:
              only: master
      - create_release:
          requires:
            - build
            - test
          filters:
            branches:
              only: /release-.*/
      - internal:
          requires:
            - build
            - test
          filters:
            branches:
              only: internal
  release:
    jobs:
      - build:
          filters:
            branches:
              only: external
      - test:
          requires:
            - build
      - release:
          requires:
            - build
            - test
          filters:
            branches:
              only: external

experimental:
  notify:
    branches:
      only:
        - master
        - internal
